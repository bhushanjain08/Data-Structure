Link : https://visualgo.net/en/sorting
https://www.toptal.com/developers/sorting-algorithms
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort
BIG O Cheat sheet : https://www.bigocheatsheet.com/

# Objectives : 
Implement bubble sort
Implement selection sort
Implement insertion sort
Understand why it is important to learn these simpler sorting algorithms

What is sorting?
Sorting is the process of rearranging the items in a collection (e.g. an array) so that the items are in some kind of order.

Examples
Sorting numbers from smallest to largest
Sorting names alphabetically
Sorting movies based on release year
Sorting movies based on revenue

Basic Sorting Alog : 
1) Bubble Sorting
2) Insertion Sorting
3) Selection sorting

Advance Sorting Alog :
1) Merge sort
2) Quick sort
3) Radix sort

Telling JavaScript how to sort
* The built-in sort method accepts an optional comparator function ? 
* You can use this comparator function to tell JavaScript how you want it to sort
* The comparator looks at pairs of elements (a and b), determines their sort order based on the return value
   - If it returns a negative number, a should come before b
   - If it returns a positive number, a should come after b,
   - If it returns 0, a and b are the same as far as the sort is concerned

function numberCompare(num1, num2) {
  return num1 - num2;
}
[ 6, 4, 15, 10 ].sort(numberCompare);
// [ 4, 6, 10, 15 ]

Recap
Merge sort and quick sort are standard efficient sorting algorithms
Quick sort can be slow in the worst case, but is comparable to merge sort on average
Merge sort takes up more memory because it creates a new array (in-place merge sorts exist, but they are really complex!)
Radix sort is a fast sorting algorithm for numbers
Radix sort exploits place value to sort numbers in linear time (for a fixed number of digits)

