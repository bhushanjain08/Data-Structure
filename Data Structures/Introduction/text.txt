DS Contains : 
    Doubly Linked Lists
    Directed Graphs
    Undirected Unweighted Graphs
    Binary Search
    Trees
    Stacks
    Queues
    Binary Heaps
    Hash Tables

WHAT DO THEY DO?
- Data structures are collections of values, the relationships among them, and the functions or operations that can be applied to the data

WHY SO MANY???
Different data structures excel at different things.  Some are highly specialized, while others (like arrays) are more generally used.

USES : 

1) Working with
map/location data?
Use a graph!

2) Need an ordered list with fast inserts/removals at the beginning and end?
Use a linked list!

3) Web scraping nested HTML?
Use a tree!

4) Need to write a scheduler?
Use a binary heap!
------------------------------------

ES2015
CLASS SYNTAX
https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes

# Structure:  

class DataStructure(){
    constructor(){
        // what default properties should it have?
    }
    someInstanceMethod(){
        // what should each object created from this class be able to do?
    }
}

OBJECTIVES :
Explain what a class is
Understand how JavaScript implements the idea of classes
Define terms like abstraction, encapsulation and polymorphism
Use ES2015 classes to implement data structures

What is a class?
Does JavaScript really have them?
Ehh....not really
A blueprint for creating objects with pre-defined properties and methods

# One gotcha with `this`
Inside all of our instance methods and constructor, the keyword `this` refers to the object created from that class (also known as an instance)

Recap :
* Classes are blueprints that when created make objects known as instances
* Classes are created with the new keyword
* The constructor function is a special function that gets run when the class is instantiated
* Instance methods can be added to classes similar to methods in objects
* Class methods can be added using the static keyword
